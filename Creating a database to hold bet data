 Final Project: NFL Data Processing
# Names: Annelise Rasmussen and Camden Freeze

# Importing required libraries
import pymssql
import numpy as np
import pandas as pd
import psycopg2

# List of CSV files to be processed
csvs = ["nfl_stadiums.csv", "nfl_teams.csv", "spread_scores-1.csv"]

# Establishing connection to the PostgreSQL database
# Note: Replace with your actual database connection details
conn = psycopg2.connect(
    database='your_database_name',
    user='your_username',
    password='your_password',
    host='your_host',
    port='your_port'
)
cursor = conn.cursor()

# Iterating through each CSV file
for l in csvs:
    df = pd.read_csv(l)  # Reading the CSV file into a DataFrame
   
    # Processing each row in the DataFrame
    for x in df.index:
        if l == 'nfl_stadiums.csv':
            # Processing NFL stadiums data
            z = df.loc[x]['stadium_location'].strip().split(', ')
            
            # Creating the stadiums table if it doesn't exist
            cursor.execute(''' 
            CREATE TABLE IF NOT EXISTS stadiums (
                # ... [table definition] ...
            );
            ''')
            conn.commit()
            
            # Inserting stadium data into the table
            cursor.execute('''
            INSERT INTO stadiums (stadium_name, stadium_state, stadium_city, stadium_open, stadium_close, stadium_type, stadium_address, stadium_weather_station_code, stadium_weather_type, stadium_capacity, stadium_surface, station, name, latitude, longitude, elevation)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
            ''', (df.loc[x]['stadium_name'], z[0], z[1], df.loc[x]['stadium_open'], df.loc[x]['stadium_close'], df.loc[x]['type'], df.loc[x]['address'], df.loc[x]['stadium_weather_station_code'], df.loc[x]['stadium_weather_type'], df.loc[x]['stadium_capacity'], df.loc[x]['stadium_surface'], df.loc[x]['STATION'], df.loc[x]['NAME'], df.loc[x]['LATITUDE'], df.loc[x]['LONGITUDE'], df.loc[x]['ELEVATION']))
            
            conn.commit()
        elif l == 'nfl_teams.csv':
            # Processing NFL teams data
            # Creating teams table if it doesn't exist
            cursor.execute(''' 
            CREATE TABLE IF NOT EXISTS teams (
                # ... [table definition] ...
            );
            ''')
            conn.commit()
            
            # Inserting team data into the table
            cursor.execute('''
            INSERT INTO teams (team_name, team_name_short, team_id, team_id_pfr, team_conference, team_division, team_conference_pre2002, team_division_pre2002)
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
            ''', (df.loc[x]['team_name'], df.loc[x]['team_name_short'], df.loc[x]['team_id'], df.loc[x]['team_id_pfr'], df.loc[x]['team_conference'], df.loc[x]['team_division'], df.loc[x]['team_conference_pre2002'], df.loc[x]['team_division_pre2002']))
            
            conn.commit()

        else:
            # Processing spread scores data
            # Creating spread_scores table if it doesn't exist
            cursor.execute(''' 
            CREATE TABLE IF NOT EXISTS spread_scores (
                # ... [table definition] ...
            );
            ''')

            # Calculating winner_line
            winner_line = ''
            if int(df.loc[x]['spread_favorite']) > (int(df.loc[x]['score_away']) - int(df.loc[x]['score_home'])):
                winner_line = 'home'
            elif int(df.loc[x]['spread_favorite']) == (int(df.loc[x]['score_away']) - int(df.loc[x]['score_home'])):
                winner_line = 'push'
            else:
                winner_line = 'away'
            
            # Calculating winner_ou (over/under)
            winner_ou = ''
            if int(df.loc[x]['over_under_line']) < (int(df.loc[x]['score_home']) + int(df.loc[x]['score_away'])):
                winner_ou = 'over'
            elif int(df.loc[x]['over_under_line']) == (int(df.loc[x]['score_home']) + int(df.loc[x]['score_away'])):
                winner_ou = 'push'
            else:
                winner_ou = 'under'    
            
            # Inserting spread scores data for seasons 2015 and later
            if int(df.loc[x]['schedule_season']) >= 2015:
                cursor.execute('''
                INSERT INTO spread_scores (schedule_date, schedule_season, schedule_week, schedule_playoff, team_home, score_home, score_away, team_away, team_favorite_id, spread_favorite, over_under_line, stadium, stadium_neutral, weather_temperature, weather_wind_mph, weather_humidity, weather_detail, winner_line, winner_ou)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                ''', (df.loc[x]['schedule_date'], df.loc[x]['schedule_season'], df.loc[x]['schedule_week'], df.loc[x]['schedule_playoff'], df.loc[x]['team_home'], df.loc[x]['score_home'], df.loc[x]['score_away'], df.loc[x]['team_away'], df.loc[x]['team_favorite_id'], df.loc[x]['spread_favorite'], df.loc[x]['over_under_line'], df.loc[x]['stadium'], df.loc[x]['stadium_neutral'], df.loc[x]['weather_temperature'], df.loc[x]['weather_wind_mph'], df.loc[x]['weather_humidity'], df.loc[x]['weather_detail'], winner_line, winner_ou))
                
                conn.commit()

# Note: Remember to close the database connection after processing all files
conn.close()
